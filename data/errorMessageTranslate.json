{"fr":{
"deuxPointsIf": "Une condition 'if' doit se terminer par les deux points ':' comme ceci -> 'if a < b:'.",
"deuxPointsElse": "Une condition 'else' doit se terminer par les deux points ':' comme ceci -> 'else:'.",
"deuxPointsElif": "Une condition 'elif' doit se terminer par les deux points ':' comme ceci -> 'else if b < c:'.",
"deuxPointsWhile": "Une boucle 'while' doit se terminer par les deux points ':' comme ceci -> 'while maVariable < 5:'.",
"deuxPointsFor": "Une boucle 'for' doit se terminer par les deux points ':' comme ceci -> 'for loop in range(5):'.",
"deuxPointsDef": "Une définition de fonction 'def' doit se terminer par les deux points ':' comme ceci -> 'def maFonction():'.",

"conditionOneEqual": "Pour écrire une égalité dans une condition, on doit mettre un double signe égal, et donc écrire: 'a == b'.",
"previousErrorBrackets|errorBrackets": "Tu dois avoir autant de parenthèses ouvrantes que fermetantes : tu peux écrire '(a*(b+c))' mais PAS '(a*(b+c)' NI 'a*(b+c))'",
"missingParentheses": "Tu dois mettre des parenthèses autour des paramètres d'une fonction pour l'appeler : tu ne dois pas écrire '{{0}} [paramètres]' MAIS '{{0}}([paramètres])', en remplaçant [paramètres] par les paramètres de la fonction.",

"pointVirguleFin": "En python, il n'y a pas besoin de mettre un point-virgule à la fin d'une instruction.",
"typeVariableDeclaration": "En python, on n'a pas besoin de donner le type d'une variable lors de sa déclaration.",

"plusGrandEgalInversion": "Tu ne dois PAS écrire '=>' mais : '>='.",
"plusPetitEgalInversion": "Tu ne dois PAS écrire '=<' mais : '<='.",
"guillemetsError": "Tu n'a pas bien fermé tes guillemets : tu dois avoir autant de guillements ouvrant que fermant autour d'une chaine de caractère.\nPar exemple, tu dois écrire 'Hello world !' ou encore \"Hello world !\".",

"nonAscii": "Tu as utilisé un accent dans ton code, et tu n'as pas le droit ! Enlève l'accent, ou alors rajoute au début de ton code, avant TOUTES les autres lignes: \"# coding=utf-8\"",
"invalidSyntax": "Ton code n'est pas écrit correctement ! Vérifie bien ce que tu as écrit.",

"indentationError": "Tu as une erreur dans l'indentation : tu dois mettre le même nombre d'espaces devant les instructions d'un MÊME bloc",
"indentationErrorEmptyBlock": "Tu as un bloc d'instruction (if, elif, else, while, for, def...) qui est VIDE, ce qui est interdit.",
"indentationErrorLevel": "TOUTES les instructions d'un même bloc d'instruction (if, elif, else, while, for, def...) doivent avoir le même nombre d'espaces devant elles (sauf si elles sont dans des sous-blocs).",

"indexError": "Tu accèdes à une case de la liste qui n'existe pas. Si tu utilises une variable, vérifie qu'elle ne peut pas être trop grande. Souviens-toi que les cases d'une liste sont numérotées de 0 à TAILLE-1.",
"KeyError": "Tu accès à une CLÉ (une case) de ton dictionnaire qui n'existe pas. Vérifie que ta clé a bien été définie dans le dictionnaire !",
"ZeroDivisionError": "Cette instruction effectue une division par zero, ce qui est IMPOSSIBLE. Si tu utilises une variable, vérifie que le diviseur ne vaut jamais 0.",
"mathDomainError": "Tu utilises un fonction mathématique en lui donnant un nombre qui est interdit !",
"mathDomainError_log" : "La fonction log (logarithme) prend en paramètre un nombre qui doit être STRICTEMENT SUPÉRIEUR à 0.",
"mathDomainError_sqrt":"La fonction sqrt (racine carrée) prend en paramètre un nombre qui doit être SUPÉRIEUR OU ÉGAL à 0.",
"ImportError": "Un fichier ou un module inexistant est importé. Vérifie bien son nom.",
"EOFError": "Ton code à tenté de lire une ligne d'entrée, mais il n'y en avais pas ou plus ! À chaque fois que tu utilise input(), ton code lit une nouvelle ligne. Une erreur se produit quand plus aucune ligne ne peut être lue.",

"valueErrorInt": "Tu as essayé de convertir en nombre entier (int) une chaîne de caractères, mais celle-ci ne représente pas un nombre entier (ou alors, pas seulement un unique nombre entier) ! Si elle contient plusieurs éléments, tu peux les séparer en faisant [chaîne].split() (en remplaçant [chaîne] par la chaine de caractères)",
"valueErrorIntMappage": "Tu utilise la fonction int() pour convertir en nombre une suite d'entiers. Mais tu convertis plusieurs nombres à la fois ! Pour cela, remplace 'int(--ton code--)' par 'map(int, (--ton code--).split())'.",
"valueErrorIntInsteadOfFloat": "Tu essaies de convertir un nombre à virgule en nombre entier. Pour utiliser un nombre à virgule, remplace int() par float()",

"undefinedVar": "La variable (ou la fonction) {{0}} n'existe pas, ou pas encore à cet endroit. Vérifie que tu ne t'es pas trompé dans le nom ! Si c'est toi qui l'a créée, vérifie que tu le fais AVANT. Sinon, vérifie que le module est bien importé.",
"returnOutsideFct": "L'instruction 'return' doit se trouver dans une fonction. Elle termine la fonction et indique ce qu'elle retourne.",

"custom": "{{0}}"
}}
